#!/bin/bash
#SBATCH --account=rrg-belandl1
#SBATCH --ntasks=40			# number of MPI processes.
#SBATCH --mem-per-cpu=1000M		# memory; default unit is megabytes.
#SBATCH --time=0-23:59			# time (DD-HH:MM)
#SBATCH -o 20250130-Tde.out
#SBATCH --job-name=Tde-10-PotentialTemp-TryTemp

####################_Start_##################
echo __________Start__________
#now=$(date +"%T")
#echo "Start time : $now"

####################_Modules_####################
echo __________LammpsTabGap__________
module load StdEnv/2023  intel/2023.2.1  openmpi/4.1.5 lammps-omp/20230802

echo __________ModulesTabGap__________
#module load nixpkgs/16.09  StdEnv/2020  intel/2020.1.217  openmpi/4.0.3 lammps-omp/20201029
#module load hdf5-mpi/1.10.6 voro++/0.4.6 eigen/3.3.7
#module load mlip/2.0 fftw-mpi/3.3.8 tbb/2020.2
#module load python/3.10
#pip install ase

echo __________Python__________
module load StdEnv/2023 python/3.11 qt/6.5.3 scipy-stack/2024a
pip install --upgrade pip
pip install numpy
pip install ase
pip install pandas
pip install matplotlib
pip install ovito==3.10.6


####################_Execution_##################
# Directions, please check https://ssd.phys.strath.ac.uk/resources/crystallography/crystallographic-direction-calculator/ 
directions=(
#"0 0 1"
#"0 1 1"
#"0 3 1"
#"0 1 0"
#"-1 1 0"
#"-1 1 1"
#"-1 1 2"
#"1 2 0"
#"1 2 1"
#"1 2 2"

#"-2 3 3"
#"-1 4 1"
#"-1 3 1"
#"-1 2 2"
#"0 2 1"
#"-1 2 0"
#"-1 2 3"
#"-4 4 1"
#"-3 4 1"
#"-2 4 1"
#"-1 4 0"
#"-1 2 1"
#"0 2 3"
#"-1 4 2"
#"-2 2 3"
#"-3 4 3"
#"-2 3 2"
#"-2 2 1"
#"-1 3 0"
#"-1 3 2"
#"-3 4 2"
#"-1 4 3"
#"0 4 1"
#"-3 4 0"
#"-2 3 0"
#"0 1 2"
#"-2 3 1"
#"-1 3 3"

"1 0 0"
"2 0 1"
"4 1 3"
)

DefectTestReport="20250130-Tde-Defect.csv"

for direction in "${directions[@]}"
	do
		#sleep 2
		IFS=" " read -ra components <<< "$direction"
		dir_name="dir_${components[0]}_${components[1]}_${components[2]}"
		echo ###################################
		echo Dir: "$dir_name"
		#sleep 2
		mkdir "$dir_name"
		cd "$dir_name"
		for E in $(seq 0 2 200)
			do
				echo #####
				echo Energy: "$E"
				#sleep 2
				mkdir $E
				cd $E

				energy=$E
				magnitude=$(echo "sqrt(${components[0]}^2 + ${components[1]}^2 + ${components[2]}^2)" | bc -l)
				unit_vector_x=$(echo "${components[0]} / $magnitude" | bc -l)
				unit_vector_y=$(echo "${components[1]} / $magnitude" | bc -l)
				unit_vector_z=$(echo "${components[2]} / $magnitude" | bc -l)

				signx=$(echo "${components[0]}" | awk '{if($1>=0) print 1; else print -1}')
				signy=$(echo "${components[1]}" | awk '{if($1>=0) print 1; else print -1}')
				signz=$(echo "${components[2]}" | awk '{if($1>=0) print 1; else print -1}')

				energy_transform=$(echo "scale=4; 98.2269475*sqrt(2*$energy/91.22)" | bc )

				energy_x=$(echo "$energy_transform * $unit_vector_x" | bc -l)
				energy_y=$(echo "$energy_transform * $unit_vector_y" | bc -l)
				energy_z=$(echo "$energy_transform * $unit_vector_z" | bc -l)

				abs_x=$(echo "scale=4; if($energy_x < 0) -1 * $energy_x else $energy_x" | bc)
				abs_y=$(echo "scale=4; if($energy_y < 0) -1 * $energy_y else $energy_y" | bc)
				abs_z=$(echo "scale=4; if($energy_z < 0) -1 * $energy_z else $energy_z" | bc)

				sed -e 's/V1Temp/'$abs_x'/g; s/V2Temp/'$abs_y'/g; s/V3Temp/'$abs_z'/g' ../../20250130-Tde.lammpstemp > 20250130-Tde.lammpsin

				srun lmp -in 20250130-Tde.lammpsin -log 20250130-Tde.lammpslog # > /dev/null 2>&1
				#chmod +rwx /home/veshand/Software/Lammps-tabGAP/lmp4_CC
				#srun /home/veshand/Software/Lammps-tabGAP/lmp4_CC -in 20250130-Tde.lammpsin -log 20250130-Tde.lammpslog

				DefectDist=$(python3 ../../../../../../20250130-Tde-Defect-Dist.py 2>&1) || {
					echo "Error in Defect-Dist.py:"
					echo "$DefectDist"
					scancel $SLURM_JOB_ID
					exit 1
				}
				echo "The output of 20250130-Tde-Defect-Dist.py is: $DefectDist"	

                                sed -e 's/DumpFileTemp/20250130-Tde.dump/g; s/RefFileTemp/20250211-Thermalization.dump/g;' ../../../../20250130-Tde-Defect-Ws.pytemp > 20250130-Tde-Defect-Ws.py

				DefectWs=$(python3 20250130-Tde-Defect-Ws.py 2>&1) || {
					echo "Error in Defect-Ws.py:"
					echo "$DefectWs"
					scancel $SLURM_JOB_ID
					exit 1
				}
				echo "The output of 20250130-Tde-Defect-Ws.py is: $DefectWs"

				[ -f "$DefectTestReport" ] && rm "$DefectTestReport"
				echo "DefectDist,DefectWs" >> "$DefectTestReport"
				echo "$DefectDist,$DefectWs" >> "$DefectTestReport"

				if (( DefectDist == 1 && DefectWs == 1 )); then
    					echo "Both DefectDist and DefectWs are 1. Stopping the current loop."
					cd ..
					break
				fi

				rm -rf 20250130-Tde-Thermalization.data
				rm -rf 20250130-Tde.data
				rm -rf 20250130-Tde.dump
				rm -rf 20250130-Tde.lammpsin
				rm -rf 20250130-Tde.lammpslog
				rm -rf 20250130-Tde-Defect-Ws.py


				#rm -rf Zr.eam3.fs
				#rm -rf detect_defects.py
				#rm -rf Zr.tabgap

				cd ..
			done
		cd ..
	done
cd ..

####################_Finish_##################
echo __________Finish__________
#now=$(date +"%T")
#echo "Finish time : $now"